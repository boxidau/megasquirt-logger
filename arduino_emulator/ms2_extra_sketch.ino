byte output[][219] = {
  {
    0x00,0xd5,0x00,0x00,0x86,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,0x93,0x01,0x01,0x03,0xe8,0x03,0xd1,0x03,0x4d,0x03,0xdb,0x02,0x6a,0x00,0x7b,0x00,0x65,
    0x00,0x65,0x00,0x00,0x03,0xe8,0x03,0xe8,0x03,0xce,0x00,0x64,0x00,0x00,0x00,0x64,0x03,0xe8,0x00,0x64,0x00,0x64,0x00,0x64,0x00,0x89,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x35,0x00,0x00,0x03,0xd1,0x00,0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xed,0x00,0x00,0x02,0x6e,0x00,0x00,0x03,0xd1,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x03,0xff,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xd1,
    0x03,0xd1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x4d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,0x04,0x04,0x00,0x00,0x00,0x03,0x37,0xbe,0x4c
  },
  {
    0x00,0xd5,0x00,0x00,0x86,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,0x93,0x01,0x01,0x03,0xe8,0x03,0xd1,0x03,0x4d,0x03,0xdb,0x02,0x8b,0x00,0x7b,0x00,0x65,
    0x00,0x65,0x00,0x00,0x03,0xe8,0x03,0xe8,0x03,0xce,0x00,0x64,0x00,0x00,0x00,0x64,0x03,0xe8,0x00,0x64,0x00,0x64,0x00,0x64,0x00,0x89,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x35,0x00,0x00,0x03,0xd1,0x00,0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xe5,0x00,0x00,0x02,0x82,0x00,0x00,0x03,0xd1,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x03,0xff,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xd1,
    0x03,0xd1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x4d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,0x00,0x04,0x00,0x00,0x00,0xc1,0x8e,0x2d,0x6b
  },
  {
    0x00,0xd5,0x00,0x00,0x87,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,0x93,0x01,0x01,0x03,0xe8,0x03,0xd1,0x03,0x4d,0x03,0xdb,0x02,0x25,0x00,0x7b,0x00,0x65,
    0x00,0x65,0x00,0x00,0x03,0xe8,0x03,0xe8,0x03,0xce,0x00,0x64,0x00,0x00,0x00,0x64,0x03,0xe8,0x00,0x64,0x00,0x64,0x00,0x64,0x00,0x89,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x35,0x00,0x00,0x03,0xd1,0x00,0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xe7,0x00,0x00,0x02,0x1e,0x00,0x00,0x03,0xd1,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x03,0xff,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xd1,
    0x03,0xd1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x4d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,0x00,0x04,0x00,0x00,0x00,0x8f,0x76,0xad,0xc7
  },
  {
    0x00,0xd5,0x00,0x00,0x87,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,0x93,0x01,0x01,0x03,0xe8,0x03,0xd1,0x03,0x4d,0x03,0xdb,0x01,0x02,0x00,0x7b,0x00,0x65,
    0x00,0x65,0x00,0x00,0x03,0xe8,0x03,0xe8,0x03,0xce,0x00,0x64,0x00,0x00,0x00,0x64,0x03,0xe8,0x00,0x64,0x00,0x64,0x00,0x64,0x00,0x89,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x35,0x00,0x00,0x03,0xd1,0x00,0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xe8,0x00,0x00,0x01,0x36,0x00,0x00,0x03,0xd1,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x03,0xff,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xd1,
    0x03,0xd1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x4d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,0x00,0x04,0x00,0x00,0x00,0xf9,0x44,0xce,0x6e
  },
  {
    0x00,0xd5,0x00,0x00,0x87,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,0x93,0x01,0x01,0x03,0xe8,0x03,0xd1,0x03,0x4d,0x03,0xdb,0x00,0x45,0x00,0x7b,0x00,0x65,
    0x00,0x65,0x00,0x00,0x03,0xe8,0x03,0xe8,0x03,0xce,0x00,0x64,0x00,0x00,0x00,0x64,0x03,0xe8,0x00,0x64,0x00,0x64,0x00,0x64,0x00,0x89,0x00,0x00,0xd9,0x3d,0x00,0x00,0x00,
    0x35,0x00,0x00,0x03,0xd1,0x00,0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xf0,0x00,0x00,0x00,0xa8,0x00,0x00,0x03,0xd1,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x03,0xff,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xd1,
    0x03,0xd1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x4d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,0x04,0x04,0x00,0x00,0x00,0x98,0x6a,0x90,0xb3
  }
};

byte frame[13];
int offset = 0;

byte testCommsOutput[9] = {0x00, 0x03, 0x00, 0x00, 0xaa, 0xC9, 0x42, 0x93, 0xE4};
byte outputFrame[219];
byte sizeHeader[2];
uint16_t payloadSize;

void setup() {
  // put your setup code here, to run once:
  delay(500);
  Serial.begin(115200);
}

void loop() {
  while (Serial.available() < 2) {}
  Serial.readBytes(sizeHeader, 2);
  payloadSize = sizeHeader[0] << 8;
  payloadSize |= sizeHeader[1];

  while (Serial.available() < payloadSize + 4) {}
  Serial.readBytes(frame, payloadSize + 4);

  delay(5);
  if (frame[0] == 0x63) {
    Serial.write(testCommsOutput, 9);
  } else {
    offset++;
    Serial.write(output[offset%2], 219);
  }
}
